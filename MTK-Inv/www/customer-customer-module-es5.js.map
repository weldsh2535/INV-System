{"version":3,"sources":["webpack:///src/app/customer/customer.page.html","webpack:///src/app/customer/customer-routing.module.ts","webpack:///src/app/customer/customer.module.ts","webpack:///src/app/customer/customer.page.scss","webpack:///src/app/customer/customer.page.ts"],"names":["routes","path","component","CustomerPageRoutingModule","imports","forChild","exports","CustomerPageModule","declarations","CustomerPage","fb","customerService","platform","alertController","regform","group","editMode","fullname","required","phonenumber","location","balance","address","getCustomer","is","usePicker","getAllCustomer","subscribe","result","length","ListOfCustomer","filteredCustomer","AlertInternet","error","console","log","create","cssClass","header","message","buttons","alert","present","valid","customerId","value","updateCustomer","reset","presentAlert","query","target","filter","p","toLowerCase","includes","item","slidingItem","id","get","setValue","close","presentAlertConfirm","text","role","handler","blah","removeCategory","selector","template"],"mappings":"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","file":"customer-customer-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar color=\\\"primary\\\" >\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Customer Registration</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <form [formGroup]=\\\"regform\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Full Name</ion-label>\\n      <ion-input formControlName=\\\"fullname\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('fullname').valid && regform.get('fullname').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Phone number</ion-label>\\n      <ion-input formControlName=\\\"phonenumber\\\" type=\\\"number\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('phonenumber').valid && regform.get('phonenumber').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Location</ion-label>\\n      <ion-input formControlName=\\\"location\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('location').valid && regform.get('location').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    \\n    <ion-item>\\n      <ion-label>Balance</ion-label>\\n      <ion-input formControlName=\\\"balance\\\" type=\\\"number\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('balance').valid && regform.get('balance').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Address</ion-label>\\n      <ion-input formControlName=\\\"address\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('address').valid && regform.get('address').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <div style=\\\"text-align: center; margin: auto;\\\">\\n      <ion-button id=\\\"add items\\\" (click)=\\\"SaveCustomer()\\\"> \\n        <ion-icon slot=\\\"start\\\" name=\\\"add-circle-outline\\\"></ion-icon>\\n        {{editMode?'Update Customer':'Add Customer'}}</ion-button>\\n    </div>\\n  </form>\\n  </ion-list>\\n  <ion-searchbar\\n  (keyup)=\\\"filter($event)\\\"  showCancelButton=\\\"never\\\"></ion-searchbar>\\n\\n   <ion-item-sliding  *ngFor=\\\"let item of ListOfCustomer \\\" #slidingItem >\\n        <ion-item detail>\\n          <ion-label \\n          style=\\\"background-color: rgb(155, 166, 173); border-radius: 7px; text-align: center;color: rgb(10, 100, 236);\\\">\\n            <h2>Full Name is: {{item.fullname}}</h2>\\n            <h3>Phone Number: {{item.phonenumber}}</h3>\\n            <h3>Address : {{item.address}}</h3>\\n          </ion-label>\\n          \\n        </ion-item>\\n      <ion-item-options side=\\\"start\\\">\\n      <ion-item-option color=\\\"danger\\\" (click)=\\\"Edit(item,slidingItem)\\\">\\n     <ion-icon  name=\\\"create\\\" slot=\\\"icon-only\\\"></ion-icon></ion-item-option>\\n     <ion-item-option color=\\\"danger\\\" (click)=\\\"delete(item,slidingItem)\\\">\\n      <ion-icon  name=\\\"trash\\\" slot=\\\"icon-only\\\"></ion-icon></ion-item-option>\\n    </ion-item-options>\\n  </ion-item-sliding>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CustomerPage } from './customer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CustomerPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CustomerPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CustomerPageRoutingModule } from './customer-routing.module';\n\nimport { CustomerPage } from './customer.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    CustomerPageRoutingModule\n  ],\n  declarations: [CustomerPage]\n})\nexport class CustomerPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL2N1c3RvbWVyLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AlertController, IonItemSliding, Platform } from '@ionic/angular';\nimport { Customer } from 'src/Tabels/tabels-list';\nimport { CustomerService } from '../Service/customer.service';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.page.html',\n  styleUrls: ['./customer.page.scss'],\n})\nexport class CustomerPage implements OnInit {\n  regform=this.fb.group({});\n  usePicker: boolean;\n  ListOfCustomer: Customer[];\n  filteredCustomer: Customer[];\n  customerId: string;\n  editMode: boolean=false;\n  constructor(private fb:FormBuilder,\n    private customerService:CustomerService,\n    private platform: Platform,\n  private alertController: AlertController) {}\n\n  ngOnInit() {\n    this.regform=this.fb.group({\n      fullname:['',Validators.required],\n      phonenumber:['',Validators.required],\n      location:['',Validators.required],\n      balance:['',Validators.required],\n      address:['',Validators.required]\n    });\n    this. getCustomer();\n    if ((this.platform.is('mobile') && !this.platform.is('hybrid')) ||\n      this.platform.is('desktop')\n   ) {\n     this.usePicker = true;\n   }\n  }\n  getCustomer()\n  {\n    try {\n      this.customerService.getAllCustomer().subscribe(result=>{\n       if(result.length>0)\n       {\n         this.ListOfCustomer =result;\n         this.filteredCustomer=result;\n       }\n       else\n       {\n        this.AlertInternet();\n       }\n       \n      }\n      );\n    }\n    catch(error) {\n     console.log(error);\n    }\n\n  }\n  async AlertInternet() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Internet',\n      // subHeader: 'Subtitle',\n      message: 'Please turn on wifi or data',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n  SaveCustomer()\n  {\n    if(this.regform.valid)\n    {\n      if(!this.customerId)\n      {\n        this.customerService.create(this.regform.value);\n      }\n      else{\n       this.customerService.updateCustomer(this.regform.value,this.customerId)\n      }\n      this.regform.reset();\n      this.customerId=\"\";\n      this.presentAlert(\"Save Sucessfully\");\n    }\n    else{\n     this.presentAlert(\"Please enter all fields\");\n    }\n  }\n  async presentAlert(message) {\n   const alert = await this.alertController.create({\n     cssClass: 'my-custom-class',\n     header: 'Customer',\n     // subHeader: 'Subtitle',\n     message: message,\n     buttons: ['OK']\n   });\n\n   await alert.present();\n }\n filter(query) { \n     \n  this.filteredCustomer = (query.target.value) ? this.ListOfCustomer.filter(p => p.fullname.toLowerCase().includes(query.target.value.toLowerCase())) :\n  this.ListOfCustomer;\n}\n Edit(item :Customer,slidingItem: IonItemSliding )\n {  this.editMode=true;\n     this.customerId =item.id;\n     this.regform.get('fullname').setValue(item.fullname);\n     this.regform.get('phonenumber').setValue(item.phonenumber);\n     this.regform.get('location').setValue(item.location);\n     this.regform.get('address').setValue(item.address);\n     this.regform.get('balance').setValue(item.balance);\n     slidingItem.close();\n }\n delete(item :Customer,slidingItem: IonItemSliding )\n {\n   this.presentAlertConfirm(item)\n }\n async presentAlertConfirm(item :Customer) {\n   const alert = await this.alertController.create({\n     header: 'Confirm!',\n     message: '<strong>Are you sure you want delete?</strong>',\n     buttons: [\n       {\n         text: 'Cancel',\n         role: 'cancel',\n         cssClass: 'secondary',\n         handler: (blah) => {\n           console.log('Confirm Cancel: blah');\n         }\n       }, {\n         text: 'OK',\n         handler: () => {\n         this.customerService.removeCategory(item.id);\n        this.regform.reset();\n        this.customerId=null;\n         }\n       }\n     ]\n   });\n\n   await alert.present();\n }\n}\n"]}