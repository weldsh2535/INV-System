{"version":3,"sources":["webpack:///src/app/filter/filter.page.html","webpack:///src/app/common/app-error.ts","webpack:///src/app/common/bad-input.ts","webpack:///src/app/common/not-found-error.ts","webpack:///src/app/filter/filter-routing.module.ts","webpack:///src/app/filter/filter.module.ts","webpack:///src/app/filter/filter.page.scss","webpack:///src/app/filter/filter.page.ts"],"names":["AppError","originalError","BadInput","NotFoundError","routes","path","component","FilterPageRoutingModule","imports","forChild","exports","FilterPageModule","declarations","FilterPage","vendorService","getAllVendor","subscribe","result","length","listOfvendors","showFilterRow","showHeaderFilter","applyFilterTypes","key","name","saleAmountHeaderFilter","text","value","currentFilter","orderHeaderFilter","bind","selectedFilterOperations","target","column","getOrderDay","defaultCalculateFilterExpression","apply","arguments","data","dataSource","postProcess","results","push","dataGrid","instance","clearFilter","rowData","Date","OrderDate","getDay","selector","template"],"mappings":"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","file":"filter-filter-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Filter Example</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n<dx-data-grid\\n    id=\\\"gridContainer\\\"\\n    [dataSource]=\\\"listOfvendors\\\"\\n    keyExpr=\\\"id\\\"\\n    [showBorders]=\\\"true\\\"\\n    [focusedRowEnabled]=\\\"true\\\"\\n    [columnHidingEnabled]=\\\"true\\\">\\n\\n    <dxo-editing\\n        [allowUpdating]=\\\"true\\\"\\n        [allowDeleting]=\\\"true\\\"\\n        [selectTextOnEditStart]=\\\"true\\\"\\n        [useIcons]=\\\"true\\\">\\n    </dxo-editing>\\n    <dxo-editing [allowAdding]=\\\"true\\\" [allowUpdating]=\\\"true\\\" mode=\\\"batch\\\"></dxo-editing>\\n    <dxo-grouping [contextMenuEnabled]=\\\"true\\\" expandMode=\\\"rowClick\\\"></dxo-grouping>\\n    <dxo-group-panel [visible]=\\\"true\\\" emptyPanelText=\\\"Use the context menu of header columns to group data\\\"></dxo-group-panel>\\n    <dxo-pager\\n        [allowedPageSizes]=\\\"[5, 8, 15, 30]\\\"\\n        [showInfo]=\\\"true\\\"\\n        [showNavigationButtons]=\\\"true\\\"\\n        [showPageSizeSelector]=\\\"true\\\"\\n        [visible]=\\\"true\\\">\\n    </dxo-pager>\\n    <dxo-paging [pageSize]=\\\"8\\\"></dxo-paging>\\n    <dxo-column-chooser [enabled]=\\\"true\\\" mode=\\\"select\\\"></dxo-column-chooser>\\n    <dxo-header-filter [visible]=\\\"true\\\">\\n    </dxo-header-filter>\\n\\n    <dxo-filter-panel [visible]=\\\"true\\\">\\n    </dxo-filter-panel>\\n\\n    <dxo-filter-row [visible]=\\\"true\\\">\\n    </dxo-filter-row>\\n\\n    <dxo-paging [pageSize]=\\\"10\\\">\\n    </dxo-paging>\\n\\n    <dxo-pager\\n        [allowedPageSizes]=\\\"[5, 10]\\\"\\n        [showPageSizeSelector]=\\\"true\\\"\\n        [showNavigationButtons]=\\\"true\\\">\\n    </dxo-pager>\\n    <dxi-column [allowGrouping]=\\\"false\\\" dataField=\\\"vendorName\\\" [width]=\\\"130\\\" caption=\\\"Vendor Name\\\"></dxi-column>\\n    <dxi-column dataField=\\\"address\\\" caption=\\\"Address\\\"></dxi-column>\\n    <dxi-column dataField=\\\"contact\\\" caption=\\\"Contact\\\"></dxi-column>\\n    <dxi-column dataField=\\\"phonenumber\\\" caption=\\\"Phone Number\\\"></dxi-column>\\n    <dxi-column dataField=\\\"email\\\" caption=\\\"Email\\\"></dxi-column>\\n    <dxi-column dataField=\\\"website\\\" caption=\\\"Web site\\\"></dxi-column>>\\n\\n    <!-- <dxi-column dataField=\\\"StateID\\\"\\n        caption=\\\"State\\\">\\n        <dxo-lookup\\n            [dataSource]=\\\"states\\\"\\n            valueExpr=\\\"ID\\\"\\n            displayExpr=\\\"Name\\\">\\n        </dxo-lookup>\\n    </dxi-column> -->\\n\\n</dx-data-grid>\\n<!-- \\n  <dx-data-grid \\n  id=\\\"gridContainer\\\" \\n  [dataSource]=\\\"listOfvendors\\\"\\n  [showBorders]=\\\"true\\\">\\n  <dxo-filter-row \\n      [visible]=\\\"showFilterRow\\\" \\n      [applyFilter]=\\\"currentFilter\\\"></dxo-filter-row>\\n  <dxo-header-filter \\n      [visible]=\\\"showHeaderFilter\\\"></dxo-header-filter>\\n  <dxo-search-panel \\n      [visible]=\\\"true\\\" \\n      [width]=\\\"240\\\" \\n      placeholder=\\\"Search...\\\"></dxo-search-panel>\\n  <dxi-column \\n      dataField=\\\"vendorName\\\" \\n      [width]=\\\"140\\\" \\n      caption=\\\"Vendor Name\\\">\\n      <dxo-header-filter \\n          [groupInterval]=\\\"10000\\\"></dxo-header-filter>\\n  </dxi-column>\\n  <dxi-column \\n      dataField=\\\"contact\\\" \\n      alignment=\\\"right\\\" \\n      [width]=\\\"120\\\"\\n      [calculateFilterExpression]=\\\"calculateFilterExpression\\\">\\n      <dxo-header-filter \\n          [dataSource]=\\\"orderHeaderFilter\\\"></dxo-header-filter>\\n  </dxi-column>\\n  <dxi-column \\n      dataField=\\\"address\\\" \\n      alignment=\\\"right\\\" \\n      dataType=\\\"datetime\\\"\\n      format=\\\"M/d/yyyy, HH:mm\\\"\\n      [width]=\\\"180\\\"></dxi-column>\\n  <dxi-column \\n      dataField=\\\"phonenumber\\\" \\n      alignment=\\\"right\\\" \\n      format=\\\"number\\\"\\n      [editorOptions]=\\\"{ format: 'currency', showClearButton: true }\\\">\\n      <dxo-header-filter \\n          [dataSource]=\\\"saleAmountHeaderFilter\\\"></dxo-header-filter>\\n  </dxi-column>\\n  <dxi-column dataField=\\\"email\\\"></dxi-column>\\n  <!-- <dxi-column \\n      dataField=\\\"CustomerStoreCity\\\" \\n      caption=\\\"City\\\">\\n      <dxo-header-filter [allowSearch]=\\\"true\\\"></dxo-header-filter>\\n  </dxi-column> \\n</dx-data-grid> -->\\n\\n</ion-content>\\n\";","\nexport class AppError { \n    constructor(public originalError?: any) {}\n}\n","import { AppError } from './app-error';\n\nexport class BadInput extends AppError { }","import { AppError } from './app-error';\n\nexport class NotFoundError extends AppError {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FilterPage } from './filter.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FilterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FilterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FilterPageRoutingModule } from './filter-routing.module';\n\nimport { FilterPage } from './filter.page';\nimport {\n         DxDataGridModule,\n         DxSelectBoxModule,\n         DxCheckBoxModule  } from 'devextreme-angular';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FilterPageRoutingModule,\n    DxDataGridModule,\n    DxSelectBoxModule,\n    DxCheckBoxModule\n  ],\n  declarations: [FilterPage]\n})\nexport class FilterPageModule {}\n","export default \"::ng-deep #gridContainer {\\n  height: 440px;\\n}\\n\\n::ng-deep .options {\\n  padding: 20px;\\n  margin-top: 20px;\\n  background-color: rgba(191, 191, 191, 0.15);\\n}\\n\\n::ng-deep .caption {\\n  font-size: 18px;\\n  font-weight: 500;\\n}\\n\\n::ng-deep .option {\\n  margin-top: 10px;\\n}\\n\\n::ng-deep .option > span {\\n  margin-right: 10px;\\n}\\n\\n::ng-deep .option > .dx-selectbox {\\n  display: inline-block;\\n  vertical-align: middle;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmlsdGVyL2ZpbHRlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0FBQ0o7O0FBQ0E7RUFDSSxhQUFBO0VBQ0EsZ0JBQUE7RUFDQSwyQ0FBQTtBQUVKOztBQUFBO0VBQ0ksZUFBQTtFQUNBLGdCQUFBO0FBR0o7O0FBREE7RUFDSSxnQkFBQTtBQUlKOztBQUZBO0VBQ0ksa0JBQUE7QUFLSjs7QUFIQTtFQUNJLHFCQUFBO0VBQ0Esc0JBQUE7QUFNSiIsImZpbGUiOiJzcmMvYXBwL2ZpbHRlci9maWx0ZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOjpuZy1kZWVwICNncmlkQ29udGFpbmVyIHtcclxuICAgIGhlaWdodDogNDQwcHg7XHJcbn1cclxuOjpuZy1kZWVwIC5vcHRpb25zIHtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxOTEsIDE5MSwgMTkxLCAwLjE1KTtcclxufVxyXG46Om5nLWRlZXAgLmNhcHRpb24ge1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxufVxyXG46Om5nLWRlZXAgLm9wdGlvbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcbjo6bmctZGVlcCAub3B0aW9uID4gc3BhbiB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbn1cclxuOjpuZy1kZWVwIC5vcHRpb24gPiAuZHgtc2VsZWN0Ym94IHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn0iXX0= */\";","import { Component, ViewChild } from '@angular/core';\nimport { DxDataGridComponent } from 'devextreme-angular';\nimport { Vendors } from 'src/Tabels/tabels-list';\nimport { Order, Service } from '../Service/order.service';\nimport { VendorsService } from '../Service/vendors.service';\n\n@Component({\n  selector: 'app-filter',\n // providers: [ Service ],\n  templateUrl: './filter.page.html',\n  styleUrls: ['./filter.page.scss'],\n})\nexport class FilterPage {\n  @ViewChild(DxDataGridComponent, { static: false }) dataGrid: DxDataGridComponent;\n  vendors: Vendors[];\n  saleAmountHeaderFilter: any;\n  applyFilterTypes: any;\n  currentFilter: any;\n  showFilterRow: boolean;\n  showHeaderFilter: boolean;\n  listOfvendors: Vendors[];\n  constructor(private vendorService:VendorsService) {\n     // this.vendors = service.getOrders();\n      this.vendorService.getAllVendor().subscribe(result=>{ \n        if(result.length>0){\n          this.listOfvendors=result;\n         // this.filteredVendors=result;\n        }\n        else\n        {\n        //this.AlertInternet();\n        }\n        });\n      this.showFilterRow = true;\n      this.showHeaderFilter = true;\n      this.applyFilterTypes = [{\n          key: \"auto\",\n          name: \"Immediately\"\n      }, {\n          key: \"onClick\",\n          name: \"On Button Click\"\n      }];\n      this.saleAmountHeaderFilter = [{\n          text: \"Less than $3000\",\n          value: [\"SaleAmount\", \"<\", 3000]\n      }, {\n          text: \"$3000 - $5000\",\n          value: [\n              [\"SaleAmount\", \">=\", 3000],\n              [\"SaleAmount\", \"<\", 5000]\n          ]\n      }, {\n          text: \"$5000 - $10000\",\n          value: [\n              [\"SaleAmount\", \">=\", 5000],\n              [\"SaleAmount\", \"<\", 10000]\n          ]\n      }, {\n          text: \"$10000 - $20000\",\n          value: [\n              [\"SaleAmount\", \">=\", 10000],\n              [\"SaleAmount\", \"<\", 20000]\n          ]\n      }, {\n          text: \"Greater than $20000\",\n          value: [\"SaleAmount\", \">=\", 20000]\n      }];\n      this.currentFilter = this.applyFilterTypes[0].key;\n      this.orderHeaderFilter = this.orderHeaderFilter.bind(this);\n  }\n\n  private static getOrderDay(rowData) {\n      return (new Date(rowData.OrderDate)).getDay();\n  }\n\n  calculateFilterExpression(value, selectedFilterOperations, target) {\n      let column = this as any;\n      if(target === \"headerFilter\" && value === \"weekends\") {\n          return [[FilterPage.getOrderDay, \"=\", 0], \"or\", [FilterPage.getOrderDay, \"=\", 6]];\n      }\n      return column.defaultCalculateFilterExpression.apply(this, arguments);\n  }\n\n  orderHeaderFilter(data) {\n      data.dataSource.postProcess = (results) => {\n          results.push({\n              text: \"Weekends\",\n              value: \"weekends\"\n          });\n          return results;\n      };\n  }\n\n  clearFilter() {\n      this.dataGrid.instance.clearFilter();\n  }\n}\n\n"]}