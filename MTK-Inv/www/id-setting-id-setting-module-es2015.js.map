{"version":3,"sources":["./src/app/id-setting/id-setting.page.html","./src/app/id-setting/id-setting-routing.module.ts","./src/app/id-setting/id-setting.module.ts","./src/app/id-setting/id-setting.page.scss","./src/app/id-setting/id-setting.page.ts"],"names":[],"mappings":"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","file":"id-setting-id-setting-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\" >\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <div>\\n      <ion-item color=\\\"primary\\\" lines=\\\"none\\\">\\n      <ion-label>Id Setting</ion-label>\\n      <ion-badge color=\\\"success\\\" slot=\\\"end\\\">{{lengthOfIdSetting}}</ion-badge>\\n      </ion-item>\\n    </div>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-list>\\n    <form [formGroup]=\\\"regform\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Prefix</ion-label>\\n              <ion-input formControlName=\\\"prefix\\\" ></ion-input>\\n              <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('prefix').valid && regform.get('prefix').touched\\\" > This field is required! </small> \\n            </ion-item>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Length</ion-label>\\n              <ion-input formControlName=\\\"length\\\"></ion-input>\\n               <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('length').valid && regform.get('length').touched\\\" > This field is required! </small> \\n            </ion-item>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Suffix</ion-label>\\n              <ion-input formControlName=\\\"suffix\\\"></ion-input>\\n              <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('suffix').valid && regform.get('suffix').touched\\\" > This field is required! </small> \\n            </ion-item>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Current Id</ion-label>\\n              <ion-input formControlName=\\\"currentId\\\"></ion-input>\\n              <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('currentId').valid && regform.get('currentId').touched\\\" > This field is required! </small> \\n            </ion-item>\\n          </div>\\n        </div>\\n      </div>\\n     <div style=\\\"text-align: center; margin: auto;\\\">\\n      <ion-button id=\\\"add items\\\" (click)=\\\"Save()\\\" > \\n        <ion-icon slot=\\\"start\\\" name=\\\"add-circle-outline\\\"></ion-icon>\\n        {{editMode?'Update Id Setting':'Add Id Setting'}}</ion-button>\\n    </div>\\n  </form>\\n  </ion-list>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"form-group\\\">\\n       <ion-searchbar showCancelButton=\\\"never\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search\\\"></ion-searchbar>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"d-flex flex-row-reverse bd-highlight mb-2\\\">\\n            <div class=\\\"p-2 bd-highlight\\\">\\n              <select (change)=\\\"onTableSizeChange($event)\\\" class=\\\"custom-select\\\">\\n                <option *ngFor=\\\"let size of tableSizes\\\" [ngValue]=\\\"size\\\">\\n                  {{ size }}\\n                </option>\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n    </div>\\n  </div>\\n  \\n  <table class=\\\"table\\\" >\\n    <colgroup>\\n      <col width=\\\"15%\\\">\\n      <col width=\\\"15%\\\">\\n      <col width=\\\"15%\\\">\\n      <col width=\\\"15%\\\">\\n    </colgroup>\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">#</th>\\n        <th scope=\\\"col\\\">Preffix</th>\\n        <th scope=\\\"col\\\">Suffix</th>\\n        <th scope=\\\"col\\\">Length</th>\\n        <th scope=\\\"col\\\">Actions</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngIf=\\\"idSettingList?.length==0\\\" >\\n        <td class=\\\"font-italic text-center\\\" colspan=\\\"5\\\">\\n          No  item selected for this order.\\n        </td>\\n      </tr>\\n      <tr *ngFor=\\\"let item of idSettingList|filter:searchText  | paginate : {\\n                                              itemsPerPage: tableSize,\\n                                              currentPage: page,\\n                                              totalItems: count\\n                                            };\\n                                      let i = index\\\" [class.active]=\\\"i == currentIndex\\\">\\n        <th scope=\\\"row\\\">{{i + 1}}</th>\\n        <td>{{item.prefix}}</td>\\n        <td>{{item.suffix}}</td>\\n        <td>{{item.length}}</td>\\n        <td (click)=\\\"Edit(item)\\\"><ion-icon  name=\\\"create\\\" slot=\\\"icon-only\\\"></ion-icon></td>\\n        <td (click)=\\\"delete(item)\\\"><ion-icon  name=\\\"trash\\\" slot=\\\"icon-only\\\"></ion-icon></td>\\n      </tr>\\n    </tbody>\\n  \\n  </table>\\n  <!-- <div *ngIf=\\\"(idSettingList | filter: searchText).length === 0\\\">\\n    <div>error</div>\\n    <div >0 results</div>\\n    <div>No matching this search input data!!!</div>\\n  </div> -->\\n  <div class=\\\"d-flex justify-content-center\\\">\\n    <pagination-controls \\n      responsive=\\\"true\\\" \\n      previousLabel=\\\"Prev\\\" \\n      nextLabel=\\\"Next\\\" \\n      (pageChange)=\\\"onTableDataChange($event)\\\">\\n    </pagination-controls>\\n  </div>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IdSettingPage } from './id-setting.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IdSettingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IdSettingPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IdSettingPageRoutingModule } from './id-setting-routing.module';\n\nimport { IdSettingPage } from './id-setting.page';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxPaginationModule } from 'ngx-pagination';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    IdSettingPageRoutingModule,\n    Ng2SearchPipeModule,\n    NgxPaginationModule\n  ],\n  declarations: [IdSettingPage]\n})\nexport class IdSettingPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2lkLXNldHRpbmcvaWQtc2V0dGluZy5wYWdlLnNjc3MifQ== */\";","import { LookupService } from './../Service/lookup.service';\nimport { IdSetting, Lookup } from './../../Tabels/tabels-list';\nimport { IdSettingService } from '../Service/id-setting.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AlertController, IonItemSliding } from '@ionic/angular';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-id-setting',\n  templateUrl: './id-setting.page.html',\n  styleUrls: ['./id-setting.page.scss'],\n})\nexport class IdSettingPage implements OnInit {\n  regform: any;\n  IdSettingId: string;\n  editMode: boolean=false;\n  vouchertype:Lookup[];\n  idSettingList:IdSetting[];\n  idSettingList$:Observable<IdSetting[]>\n  searchText:string;\n  //paging declaration\n  page = 1;\n  count = 0;\n  tableSize = 3;\n  tableSizes = [3, 6, 9, 12];\n  currentIndex = -1;\n  listOfIdSetting: IdSetting[];\n  lengthOfIdSetting: number;\n  constructor(private fb : FormBuilder, private idSettingService:IdSettingService,\n    private lookupService:LookupService,\n    private alertController: AlertController) { }\n  ngOnInit() {\n    this.regform =this.fb.group({\n      voucherTypeId:['',Validators.required],\n      prefix:['',Validators.required],\n      length:[''],\n      suffix:[''],\n      currentId:['']\n    });\n    this.lookupService.getLookUpByType('HuXhQ8ChpLL3DbXQR6yh').subscribe(result=>{\n      this.vouchertype=result;\n     });\n     this.allIdSetting();\n  }\n  allIdSetting()\n  {\n   this.idSettingService.getAllIdSetting().subscribe(result=>{\n    \n     this.idSettingList=result;\n     this.lengthOfIdSetting= this.idSettingList.length;\n   // console.log(this.lengthOfIdSetting);\n   });\n  }\n  \n  Save()\n  {\n    if(this.regform.valid)\n    {\n      if(!this.IdSettingId)\n      {\n        this.idSettingService.create(this.regform.value);\n      }\n      else{\n       this.idSettingService.updateIdSetting(this.regform.value,this.IdSettingId)\n      }\n      this.regform.reset();\n      this.IdSettingId=\"\";\n      this.presentAlert(\"Save Sucessfully\");\n    }\n    else{\n     this.presentAlert(\"Please enter all fields\");\n    }\n  }\n  async presentAlert(message) {\n   const alert = await this.alertController.create({\n     cssClass: 'my-custom-class',\n     header: 'Id Setting',\n     // subHeader: 'Subtitle',\n     message: message,\n     buttons: ['OK']\n   });\n   await alert.present();\n }\n Edit(item :IdSetting,slidingItem: IonItemSliding )\n {\n   this.editMode=true;\n   this.IdSettingId=item.id;\n   this.regform.get(\"voucherTypeId\").setValue(item.voucherTypeId);\n   this.regform.get(\"length\").setValue(item.length);\n   this.regform.get(\"prefix\").setValue(item.prefix);\n   this.regform.get(\"suffix\").setValue(item.suffix);\n   this.regform.get(\"currentId\").setValue(item.currentId);\n   //slidingItem.close();\n }\n delete(item :IdSetting,slidingItem: IonItemSliding )\n    {\n      this.presentAlertConfirm(item)\n    }\n    async presentAlertConfirm(item :IdSetting) {\n      const alert = await this.alertController.create({\n        header: 'Confirm!',\n        message: '<strong>Are you sure you want delete?</strong>',\n        buttons: [\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: (blah) => {\n              console.log('Confirm Cancel: blah');\n            }\n          }, {\n            text: 'OK',\n            handler: () => {\n            this.idSettingService.removeIdSetting(item.id);\n           this.regform.reset();\n           this.IdSettingId=null;\n            }\n          }\n        ]\n      });\n  \n      await alert.present();\n    }\n    getIdSetting(){\n      try{\n       this.idSettingService.getAllIdSetting().subscribe(result=>{ \n       if(result.length>0){\n         this.listOfIdSetting=result;\n       }\n       else\n       {\n       this.AlertInternet();\n       }\n       });\n      }\n     catch(error){\n       console.log(error);\n     }\n    }\n    async AlertInternet(){\n     const alert = await this.alertController.create({\n       cssClass:'my-custom-class',\n       header:'Internet',\n       message:'Please trun on data or wifi',\n       buttons:['ok']\n     });\n     await alert.present();\n    }\n     //paging function\n  onTableDataChange(event){\n    this.page = event;\n    this.getIdSetting();\n  }  \n  onTableSizeChange(event): void {\n    this.tableSize = event.target.value;\n    this.page = 1;\n    this.getIdSetting();\n  }\n \n}\n"],"sourceRoot":"webpack:///"}